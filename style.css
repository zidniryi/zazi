@import 'https://unpkg.com/open-props' layer(design.system);
@import 'https://unpkg.com/open-props/normalize.light.min.css'
  layer(base.normalize);

@import url('https://fonts.googleapis.com/css2?family=Inter:wght@200..900&display=swap');
@import 'https://www.unpkg.com/layout-craft@1.0.1/dist/utilities.css'
  layer(base.utilities);
/* 
Source code of these utilities: 
https://github.com/mobalti/layout-craft/blob/main/lib/utilities.css 
*/



@layer base.override-normalize {
  :root {
    font-family: 'Inter', sans-serif;
  }
}

@layer base.demo {
  section {
    block-size: 100dvb;
    overflow: hidden;
  }
  dialog {
    background-color: hsl(349, 99%, 58%);
    position: relative;
    color: white;
    border-radius: var(--radius-2);
    padding: var(--size-4);
  }
  .Promo {
    position: relative;
    padding: var(--size-4);
    padding-block: var(--size-8);
  }

  .Wrapper {
    @media (width < 800px) {
      grid-auto-flow: row;

      .Visual {
        inline-size: 100%;
      }
    }
  }

  p {
    font-size: var(--font-size-6);
    font-weight: var(--font-weight-7);
    max-inline-size: 12ch;
    line-height: var(--font-lineheight-1);

    @media (width < 360px) {
      font-size: var(--font-size-4);
    }
  }

  small {
    font-size: var(--font-size-1);
    font-weight: var(--font-weight-7);
    text-decoration: underline;
    text-decoration-thickness: var(--border-size-2);
    text-underline-offset: 0.2ex;
  }

  .Visual {
    block-size: 272px;
    inline-size: 272px;
  }

  :is(img, picture) {
    inline-size: 100%;
    block-size: 100%;
  }

  img {
    object-fit: cover;
    object-position: top;
    background: var(--stone-2);
  }

  .ButtonClose {
    position: fixed;
    inset-block-start: var(--size-3);
    inset-inline-end: var(--size-3);
    background-color: inherit;
    background-color: oklch(0 0 0 / 10%);
    border-radius: var(--radius-round);
    inline-size: var(--size-8);
    block-size: var(--size-8);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: none;
    outline-color: white;
    outline-offset: unset;
    svg {
      inline-size: var(--size-7);
      block-size: var(--size-7);
    }

    span {
      opacity: 0.5;
      transition: 0.2s ease;
    }

    :is(&:hover, &:focus-visible) span {
      opacity: 1;
      transform: rotate(90deg);
    }
  }
}

@layer animation.dialog {
  dialog[open] {
    opacity: 1;
    transform: scale(1);
  }
  dialog {
    opacity: 0;
    transform: scale(0);
    transition: opacity 0.7s ease-out, transform 0.7s var(--ease-spring-1),
      overlay 0.7s ease-out allow-discrete,
      display 0.7s var(--ease-spring-1) allow-discrete;
  }

  @starting-style {
    dialog[open] {
      opacity: 0;
      transform: scale(0);
    }
  }

  dialog::backdrop {
    background-color: hsl(0 0 0 / 0%);
    transition: display 0.7s allow-discrete, overlay 0.7s allow-discrete,
      background-color 0.7s;
  }

  dialog[open]::backdrop {
    background-color: hsl(0 0 0 / 25%);
  }

  @starting-style {
    dialog[open]::backdrop {
      background-color: hsl(0 0 0 / 0%);
    }
  }
}